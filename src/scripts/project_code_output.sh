#!/bin/bash

# Create output file with timestamp
OUTPUT="/workspaces/mware3/src/scripts/code_backup_$(date -u +"%Y-%m-%d_%H-%M-%S").txt"

# Write header
echo "Code Output Generated at UTC: $(date -u +"%Y-%m-%d_%H-%M-%S")" > "$OUTPUT"
echo "Generated by: $USER" >> "$OUTPUT"
echo "----------------------------------------" >> "$OUTPUT"

# Add directory tree information
echo -e "\n=== Directory Structure ===" >> "$OUTPUT"
cd /workspaces/mware3/src && tree >> "$OUTPUT"
echo "----------------------------------------" >> "$OUTPUT"

# Add database schema
echo -e "\n=== Database Schema ===" >> "$OUTPUT"

# Database connection details
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="railway_dev"
DB_USER="postgres"
DB_PASS="Fish5590@"

# Get detailed schema information
if command -v psql &> /dev/null; then
    echo "Attempting to connect to database..." >> "$OUTPUT"
    
    # Retrieve all table names from the database
    TABLES=$(PGPASSWORD="$DB_PASS" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -t -c "SELECT tablename FROM pg_tables WHERE schemaname = 'public';")

    # Loop through each table and describe it
    for TABLE in $TABLES; do
        if [ -n "$TABLE" ]; then
            echo -e "\n=== Table: $TABLE ===" >> "$OUTPUT"
            PGPASSWORD="$DB_PASS" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "\d+ $TABLE" >> "$OUTPUT"
            echo "----------------------------------------" >> "$OUTPUT"
        fi
    done
else
    echo "PostgreSQL client tools not found. Schema dump skipped." >> "$OUTPUT"
fi
echo "----------------------------------------" >> "$OUTPUT"

# First add server.js and .env from root
if [ -f "/workspaces/mware3/server.js" ]; then
    echo -e "\n=== File: /workspaces/mware3/server.js ===" >> "$OUTPUT"
    cat "/workspaces/mware3/server.js" >> "$OUTPUT"
    echo "----------------------------------------" >> "$OUTPUT"
fi

if [ -f "/workspaces/mware3/.env" ]; then
    echo -e "\n=== File: /workspaces/mware3/.env ===" >> "$OUTPUT"
    # Create a sanitized version of .env with masked sensitive data
    sed -e 's/\(JWT_SECRET=\).*/\1**********************/' \
        -e 's/\(POLI_AUTH_CODE=\).*/\1**********************/' \
        -e 's/\(Fish5590@\)/********/' \
        -e 's/\(DATABASE_URL=postgres:\/\/postgres:\)[^@]*@/\1********@/' \
        "/workspaces/mware3/.env" >> "$OUTPUT"
    echo "----------------------------------------" >> "$OUTPUT"
fi

# Then add only .js files from /src
find /workspaces/mware3/src -name "*.js" -type f -exec sh -c '
    echo -e "\n=== File: {}" >> '$OUTPUT'
    cat {} >> '$OUTPUT'
    echo "----------------------------------------" >> '$OUTPUT'
' \;

# Add package.json if it exists
if [ -f "/workspaces/mware3/package.json" ]; then
    echo -e "\n=== File: package.json ===" >> "$OUTPUT"
    cat "/workspaces/mware3/package.json" >> "$OUTPUT"
    echo "----------------------------------------" >> "$OUTPUT"
fi

echo "Backup complete! Saved to: $OUTPUT"